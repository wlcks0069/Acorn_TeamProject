<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="lkddev">
	<!-- 1. 전체 좋아요 리스트 출력 -->
	<select id="totalLKList" resultType="lkdto">
		select * from likedb order by mc_no desc
	</select>
	
	<!-- 2. 특정 파라미터에서 조건값을 만족하는 좋아요 리스트 출력 -->	
	<select id="specificLKList" parameterType="lkbean" resultType="lkdto">
		select * from likedb where ${searchParam} like '%' || #{searchValue} ||'%' order by mc_no desc
	</select>
		
	<!-- 2-1. 이메일, 글번호가 일치하는 하나의 좋아요 찾기 -->	
	<select id="specificLK" parameterType="lkbean" resultType="lkdto">
		select * from likedb where mc_no=#{mc_no} and mem_email=#{mem_email}
	</select>
	
	<!-- 3. 좋아요 등록을 위한 정보 기입 구문-->	
	<insert id="lkInsert" parameterType="lkbean">
		insert into likedb values(#{mem_email},#{mc_no},#{like_date})
	</insert>
		
	<!-- 4. 좋아요 취소 구문 -->	
	<delete id="lkDelete" parameterType="lkbean">
		delete from likedb where mc_no=#{mc_no} and mem_email=#{mem_email}
	</delete>		
		
	<!-- 5. 글 번호 구하는 구문 (글 번호 자동 증가를 위함) -->
	<select id="lkcurrentMaxnum" resultType="integer">
		select max(mc_no) from likedb
	</select>		
		
	<!-- 6. 글 개수 구하는 구문 (paging 처리) -->		
	<select id="lktotalCnt" resultType="integer">
		select count(*) from likedb
	</select>	
		
	<!-- 7. 작성자를 반환하는 구문 (글 보안 작업) -->
	<select id="lksecurecode" parameterType="string" resultType="String">
		select mem_email from likedb where mc_no=#{selectednum}
	</select>	
	
	
</mapper>













